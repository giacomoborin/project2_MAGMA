TestIndexC:=
[
    [ 51047, 48237, 7421, 7712 ],
    [ 37799, 29997, 14261, 15137 ],
    [ 66923, 7026, 47529, 24967 ],
    [ 9467, 4069, 4731, 5151 ],
    [ 48947, 20745, 1126, 40870 ],
    [ 18443, 996, 6734, 1690 ],
    [ 68507, 3744, 65266, 44877 ],
    [ 57587, 32135, 22108, 43372 ],
    [ 40739, 17037, 14652, 13517 ],
    [ 68507, 52867, 16552, 32657 ],
    [ 10463, 9185, 10200, 6002 ],
    [ 54959, 24666, 46778, 24074 ],
    [ 74759, 46021, 48415, 66168 ],
    [ 27527, 3493, 13267, 20580 ],
    [ 6599, 2029, 2893, 365 ],
    [ 51407, 28640, 9983, 41557 ],
    [ 82763, 74484, 81146, 45067 ],
    [ 57899, 30468, 51614, 45233 ],
    [ 98867, 7902, 44648, 90159 ],
    [ 65687, 17464, 3223, 51130 ],
    [ 17873543, 12333430, 8999653, 14959927 ],
    [ 53120303, 45143788, 51740512, 23634721 ],
    [ 99384323, 89595846, 52465950, 21850281 ],
    [ 43610927, 37410031, 27831088, 3098395 ],
    [ 6622619, 5841796, 6610454, 263951 ],
    [ 96420683, 2054701, 20854098, 12409786 ],
    [ 70768703, 11287259, 22065115, 12613902 ],
    [ 81180119, 75594168, 61519867, 76757858 ],
    [ 25999067, 25724635, 22817088, 18671191 ],
    [ 72826043, 24925639, 13867098, 56359734 ],
    [ 80283887, 75708476, 21321362, 75244436 ],
    [ 78393803, 14678362, 72768057, 68864814 ],
    [ 84411959, 11996976, 65302396, 79470770 ],
    [ 62766323, 23585135, 28313009, 32030993 ],
    [ 2806907, 289627, 1286670, 1770363 ],
    [ 25992479, 11153393, 22965842, 3071855 ],
    [ 47938343, 5838141, 47805883, 39988676 ],
    [ 18720539, 5806114, 18015196, 11247990 ],
    [ 93520067, 47677472, 51567693, 71140339 ],
    [ 80711039, 19779831, 3544530, 28307137 ]
];//

//////[prime p, primitive element g, element h, exponent s.t. g^exponent=h]//////

load "safeprimes.mag";

TestIndexC:=[];

SetSeed(42);

for i in [1..1000] do //Il TV sar√† grande 1000
	p:=Random(safeprimes);
	g:=Integers()!Random(GF(p));
	while (g eq 0) or (Order(GF(p)!g) ne (p-1)) do
		g:=Integers()!Random(GF(p));
	end while;
	exponent:=Random(2,p-2);//Sto assumendo che l'esponente sia minore di p-1 altrimenti sarebbe sufficiente utilizzare la Field equation per abbassare il grado
	h:=Modexp(g,exponent,p);
	TestIndexC:=Append(TestIndexC, [p,g,h,exponent]);
end for;


