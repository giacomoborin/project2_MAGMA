function large(m,m0,r,n,c)
	s := 1; k := m0;
	k := k + c[s];
	// forse if √® meglio ??
	s := (s mod m) + 1;
	while k le r do
		x,u := isqrt(4*k*n); 
		buff,t := isqrt(n/k);
		j := (buff - 1)/(4*(r+1));
		if (x+k) mod 2 eq 0 then 
			i1 := 1;
			u := u + 2*x +1;
			x := x + 1;
		else
			i1 := 0;
		end if;

		odd := (k mod 2) eq 1;
		if odd then 
			jump := 4;
		else 
			jump := 2;
		end if;

		// speed up : compress them
		if odd then 
			if ((k+n) mod 4) eq (x mod 4) then
				i1 := i1 + 2;
				u := u + 4*(x+1);
				x := x + 2;
			end if;
		end if;

		for i in [i1..Floor(j+1) by jump] do
			if QR[(u-1) mod 279 + 1] then
				y,t := isqrt(u);
				if t eq 0 then
					p := Gcd(x-y,n);
					return p;
				end if;
			end if;
		end for;

		k := k + c[s];
		s := (s mod m) + 1;
	end while;
	return 1;
end function;

